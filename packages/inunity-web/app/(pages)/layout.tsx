import type { Metadata } from "next";
import "ui/styles/globals.css";
import Providers from "@/shared/ui/Providers";

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
  manifest: "/manifest.json",
  viewport:
    "minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no, viewport-fit=cover",
};

import { Inter } from "next/font/google"; // 해당 폰트의 함수를 사용합니다.

const inter = Inter({ subsets: ["latin"] }); // 변수를 선언하고, 함수의 인자로 스타일을 지정합니다.
import { config } from "@fortawesome/fontawesome-svg-core";
import "@fortawesome/fontawesome-svg-core/styles.css";
import Script from "next/script";
import { headers } from "next/headers";
import { platformResolver } from "@/lib/PlatformResolver";
import { userAgent } from "next/server";
config.autoAddCss = false;

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const topInset = Number(headers().get("Top-Inset")) || 0;
  const heads = headers();
  const ua = userAgent({headers: heads}).ua
  const platform = platformResolver(ua);
  

  return (
    <html lang="en" className="overscroll-none ">
      <head>
        <meta
          name="viewport"
          content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"
        />
        <meta name="top-inset" content={topInset.toString()} />
        <Script id="inject-insets" strategy="beforeInteractive">
          {`
      // const topInset = document.querySelector('meta[name="top-inset"]')?.content;
      // if (topInset) {
      //   document.documentElement.style.setProperty('--sat', '${topInset}px');
      //   }
        `}
        </Script>
        <Script id="inject-vh">
          {`const vh = window.innerHeight * 0.01;
          document.documentElement.style.setProperty('--vh', \`\$\{vh\}px\`); `}
        </Script>
        <style>{`:root { --sat: ${topInset}px; }`}</style>
      </head>
      <body
        className={`${inter.className} h-real-screen w-full sm:max-w-sm sm:fixed`}
        style={{ WebkitOverflowScrolling: "touch", left: "calc(50vw - 12rem)" }}
      >
        <Providers platform={platform}>{children}</Providers>
      </body>
    </html>
  );
}
